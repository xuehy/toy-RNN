// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netD.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netD.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* NetParamterD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetParamterD_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_netD_2eproto() {
  protobuf_AddDesc_netD_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netD.proto");
  GOOGLE_CHECK(file != NULL);
  NetParamterD_descriptor_ = file->message_type(0);
  static const int NetParamterD_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, word_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, hidden_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, bptt_truncate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, epoch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, learingrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, u_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, v_),
  };
  NetParamterD_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NetParamterD_descriptor_,
      NetParamterD::default_instance_,
      NetParamterD_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParamterD, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NetParamterD));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netD_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NetParamterD_descriptor_, &NetParamterD::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netD_2eproto() {
  delete NetParamterD::default_instance_;
  delete NetParamterD_reflection_;
}

void protobuf_AddDesc_netD_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nnetD.proto\"\234\001\n\014NetParamterD\022\020\n\010word_di"
    "m\030\001 \002(\007\022\022\n\nhidden_dim\030\002 \002(\007\022\025\n\rbptt_trun"
    "cate\030\003 \002(\007\022\r\n\005epoch\030\004 \002(\007\022\023\n\013learingRate"
    "\030\005 \001(\001\022\r\n\001U\030\006 \003(\001B\002\020\001\022\r\n\001W\030\007 \003(\001B\002\020\001\022\r\n\001"
    "V\030\010 \003(\001B\002\020\001", 171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netD.proto", &protobuf_RegisterTypes);
  NetParamterD::default_instance_ = new NetParamterD();
  NetParamterD::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netD_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netD_2eproto {
  StaticDescriptorInitializer_netD_2eproto() {
    protobuf_AddDesc_netD_2eproto();
  }
} static_descriptor_initializer_netD_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int NetParamterD::kWordDimFieldNumber;
const int NetParamterD::kHiddenDimFieldNumber;
const int NetParamterD::kBpttTruncateFieldNumber;
const int NetParamterD::kEpochFieldNumber;
const int NetParamterD::kLearingRateFieldNumber;
const int NetParamterD::kUFieldNumber;
const int NetParamterD::kWFieldNumber;
const int NetParamterD::kVFieldNumber;
#endif  // !_MSC_VER

NetParamterD::NetParamterD()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetParamterD)
}

void NetParamterD::InitAsDefaultInstance() {
}

NetParamterD::NetParamterD(const NetParamterD& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetParamterD)
}

void NetParamterD::SharedCtor() {
  _cached_size_ = 0;
  word_dim_ = 0u;
  hidden_dim_ = 0u;
  bptt_truncate_ = 0u;
  epoch_ = 0u;
  learingrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NetParamterD::~NetParamterD() {
  // @@protoc_insertion_point(destructor:NetParamterD)
  SharedDtor();
}

void NetParamterD::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetParamterD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetParamterD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetParamterD_descriptor_;
}

const NetParamterD& NetParamterD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netD_2eproto();
  return *default_instance_;
}

NetParamterD* NetParamterD::default_instance_ = NULL;

NetParamterD* NetParamterD::New() const {
  return new NetParamterD;
}

void NetParamterD::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NetParamterD*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(word_dim_, learingrate_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  u_.Clear();
  w_.Clear();
  v_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NetParamterD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetParamterD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 word_dim = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &word_dim_)));
          set_has_word_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_hidden_dim;
        break;
      }

      // required fixed32 hidden_dim = 2;
      case 2: {
        if (tag == 21) {
         parse_hidden_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &hidden_dim_)));
          set_has_hidden_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_bptt_truncate;
        break;
      }

      // required fixed32 bptt_truncate = 3;
      case 3: {
        if (tag == 29) {
         parse_bptt_truncate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &bptt_truncate_)));
          set_has_bptt_truncate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_epoch;
        break;
      }

      // required fixed32 epoch = 4;
      case 4: {
        if (tag == 37) {
         parse_epoch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &epoch_)));
          set_has_epoch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_learingRate;
        break;
      }

      // optional double learingRate = 5;
      case 5: {
        if (tag == 41) {
         parse_learingRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &learingrate_)));
          set_has_learingrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_U;
        break;
      }

      // repeated double U = 6 [packed = true];
      case 6: {
        if (tag == 50) {
         parse_U:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_u())));
        } else if (tag == 49) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50, input, this->mutable_u())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_W;
        break;
      }

      // repeated double W = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_W:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (tag == 57) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 58, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_V;
        break;
      }

      // repeated double V = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_V:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_v())));
        } else if (tag == 65) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 66, input, this->mutable_v())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetParamterD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetParamterD)
  return false;
#undef DO_
}

void NetParamterD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetParamterD)
  // required fixed32 word_dim = 1;
  if (has_word_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->word_dim(), output);
  }

  // required fixed32 hidden_dim = 2;
  if (has_hidden_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->hidden_dim(), output);
  }

  // required fixed32 bptt_truncate = 3;
  if (has_bptt_truncate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->bptt_truncate(), output);
  }

  // required fixed32 epoch = 4;
  if (has_epoch()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->epoch(), output);
  }

  // optional double learingRate = 5;
  if (has_learingrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->learingrate(), output);
  }

  // repeated double U = 6 [packed = true];
  if (this->u_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_u_cached_byte_size_);
  }
  for (int i = 0; i < this->u_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->u(i), output);
  }

  // repeated double W = 7 [packed = true];
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_w_cached_byte_size_);
  }
  for (int i = 0; i < this->w_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->w(i), output);
  }

  // repeated double V = 8 [packed = true];
  if (this->v_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_v_cached_byte_size_);
  }
  for (int i = 0; i < this->v_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->v(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetParamterD)
}

::google::protobuf::uint8* NetParamterD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetParamterD)
  // required fixed32 word_dim = 1;
  if (has_word_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->word_dim(), target);
  }

  // required fixed32 hidden_dim = 2;
  if (has_hidden_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->hidden_dim(), target);
  }

  // required fixed32 bptt_truncate = 3;
  if (has_bptt_truncate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->bptt_truncate(), target);
  }

  // required fixed32 epoch = 4;
  if (has_epoch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->epoch(), target);
  }

  // optional double learingRate = 5;
  if (has_learingrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->learingrate(), target);
  }

  // repeated double U = 6 [packed = true];
  if (this->u_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _u_cached_byte_size_, target);
  }
  for (int i = 0; i < this->u_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->u(i), target);
  }

  // repeated double W = 7 [packed = true];
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _w_cached_byte_size_, target);
  }
  for (int i = 0; i < this->w_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w(i), target);
  }

  // repeated double V = 8 [packed = true];
  if (this->v_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _v_cached_byte_size_, target);
  }
  for (int i = 0; i < this->v_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->v(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetParamterD)
  return target;
}

int NetParamterD::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required fixed32 word_dim = 1;
    if (has_word_dim()) {
      total_size += 1 + 4;
    }

    // required fixed32 hidden_dim = 2;
    if (has_hidden_dim()) {
      total_size += 1 + 4;
    }

    // required fixed32 bptt_truncate = 3;
    if (has_bptt_truncate()) {
      total_size += 1 + 4;
    }

    // required fixed32 epoch = 4;
    if (has_epoch()) {
      total_size += 1 + 4;
    }

    // optional double learingRate = 5;
    if (has_learingrate()) {
      total_size += 1 + 8;
    }

  }
  // repeated double U = 6 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->u_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _u_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double W = 7 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->w_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double V = 8 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->v_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _v_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetParamterD::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NetParamterD* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NetParamterD*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetParamterD::MergeFrom(const NetParamterD& from) {
  GOOGLE_CHECK_NE(&from, this);
  u_.MergeFrom(from.u_);
  w_.MergeFrom(from.w_);
  v_.MergeFrom(from.v_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_word_dim()) {
      set_word_dim(from.word_dim());
    }
    if (from.has_hidden_dim()) {
      set_hidden_dim(from.hidden_dim());
    }
    if (from.has_bptt_truncate()) {
      set_bptt_truncate(from.bptt_truncate());
    }
    if (from.has_epoch()) {
      set_epoch(from.epoch());
    }
    if (from.has_learingrate()) {
      set_learingrate(from.learingrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NetParamterD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetParamterD::CopyFrom(const NetParamterD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetParamterD::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void NetParamterD::Swap(NetParamterD* other) {
  if (other != this) {
    std::swap(word_dim_, other->word_dim_);
    std::swap(hidden_dim_, other->hidden_dim_);
    std::swap(bptt_truncate_, other->bptt_truncate_);
    std::swap(epoch_, other->epoch_);
    std::swap(learingrate_, other->learingrate_);
    u_.Swap(&other->u_);
    w_.Swap(&other->w_);
    v_.Swap(&other->v_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NetParamterD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetParamterD_descriptor_;
  metadata.reflection = NetParamterD_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
